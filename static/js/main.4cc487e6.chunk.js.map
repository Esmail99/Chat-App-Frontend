{"version":3,"sources":["redux/reducers.js","redux/store.js","redux/constants.js","redux/actions.js","components/Register.js","components/Signin.js","components/chat/Chat.js","App.js","serviceWorker.js","index.js"],"names":["initialStateMessage","messageField","initialStateUserInfo","username","password","passwordConfirmation","isSignedin","initialStateErrors","usernameErr","passwordErr","passwordConfirmationErr","rootReducer","combineReducers","messageInput","state","action","type","Object","assign","payload","userInfo","errors","store","createStore","applyMiddleware","logger","changeUsername","changePassword","validateUsername","text","validatePassword","Register","validate","props","validatePasswordConfirmation","onFormSubmit","e","preventDefault","onRegister","history","axios","post","then","data","push","catch","err","response","this","onUsernameChange","onPasswordChange","onPasswordConfirmationChange","className","onSubmit","htmlFor","onChange","aria-describedby","name","to","Component","connect","dispatch","event","target","value","withRouter","Signin","id","scrollToBottom","document","getElementById","scrollIntoView","behavior","socket","socketIOClient","on","innerHTML","message","Chat","length","emit","getElementsByTagName","onInputChange","placeholder","aria-label","onClick","height","width","viewBox","fill","fillRule","points","d","App","path","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.4cc487e6.chunk.js","sourcesContent":["import { \r\n    CHANGE_MESSAGE_INPUT,\r\n    CHANGE_USER_NAME,\r\n    CHANGE_PASSWORD,\r\n    CHANGE_PASSWORD_CONFIRMATION,\r\n    CHANGE_SIGNIN_STATE,\r\n    USER_NAME_ERROR,\r\n    PASSWORD_ERROR,\r\n    PASSWORD_CONFIRMATION_ERROR\r\n} from './constants'\r\n\r\nconst initialStateMessage = {\r\n    messageField: ''\r\n}\r\n\r\nexport const messageInput = (state = initialStateMessage, action = {}) =>{\r\n    switch(action.type){\r\n        case CHANGE_MESSAGE_INPUT:\r\n            return Object.assign({}, state, { messageField: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst initialStateUserInfo = {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    isSignedin: false\r\n}\r\n\r\nexport const userInfo = (state = initialStateUserInfo, action = {}) =>{\r\n    switch(action.type){\r\n        case CHANGE_USER_NAME:\r\n            return Object.assign({}, state, { username: action.payload});\r\n        case CHANGE_PASSWORD:\r\n            return Object.assign({}, state, { password: action.payload});\r\n        case CHANGE_PASSWORD_CONFIRMATION:\r\n            return Object.assign({}, state, { passwordConfirmation: action.payload});\r\n        case CHANGE_SIGNIN_STATE:\r\n            return Object.assign({}, state, { isSignedin: true});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst initialStateErrors = {\r\n    usernameErr: '',\r\n    passwordErr: '',\r\n    passwordConfirmationErr: ''\r\n}\r\n\r\nexport const errors = (state = initialStateErrors, action = {}) =>{\r\n    switch(action.type){\r\n        case USER_NAME_ERROR:\r\n            return Object.assign({}, state, { usernameErr: action.payload});\r\n        case PASSWORD_ERROR:\r\n            return Object.assign({}, state, { passwordErr: action.payload});\r\n        case PASSWORD_CONFIRMATION_ERROR:\r\n            return Object.assign({}, state, { passwordConfirmationErr: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}","import { applyMiddleware, createStore, combineReducers } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { messageInput, userInfo, errors } from './reducers'\r\n\r\nconst rootReducer = combineReducers({ messageInput, userInfo, errors })\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\n\r\n\r\nexport default store;","export const CHANGE_MESSAGE_INPUT = 'CHANGE_MESSAGE_INPUT';\r\n\r\nexport const CHANGE_USER_NAME = 'CHANGE_USER_NAME';\r\n\r\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\n\r\nexport const CHANGE_PASSWORD_CONFIRMATION = 'CHANGE_PASSWORD_CONFIRMATION';\r\n\r\nexport const CHANGE_SIGNIN_STATE = 'CHANGE_SIGNIN_STATE';\r\n\r\nexport const USER_NAME_ERROR = 'USER_NAME_ERROR';\r\n\r\nexport const PASSWORD_ERROR = 'PASSWORD_ERROR';\r\n\r\nexport const PASSWORD_CONFIRMATION_ERROR = 'PASSWORD_CONFIRMATION_ERROR';","import { \r\n    CHANGE_MESSAGE_INPUT,\r\n    CHANGE_USER_NAME,\r\n    CHANGE_PASSWORD,\r\n    CHANGE_PASSWORD_CONFIRMATION,\r\n    CHANGE_SIGNIN_STATE,\r\n    USER_NAME_ERROR,\r\n    PASSWORD_ERROR,\r\n    PASSWORD_CONFIRMATION_ERROR\r\n} from './constants'\r\n\r\nexport const changeMessageInput = (text) => ({\r\n    type: CHANGE_MESSAGE_INPUT,\r\n    payload: text\r\n})\r\n\r\nexport const changeUsername = (username) => ({\r\n    type: CHANGE_USER_NAME,\r\n    payload: username\r\n})\r\n\r\nexport const changePassword = (password) => ({\r\n    type: CHANGE_PASSWORD,\r\n    payload: password\r\n})\r\n\r\nexport const changePasswordConfirmation = (passwordConf) => ({\r\n    type: CHANGE_PASSWORD_CONFIRMATION,\r\n    payload: passwordConf\r\n})\r\n\r\nexport const changeSigninState = () => ({\r\n    type: CHANGE_SIGNIN_STATE\r\n})\r\n\r\nexport const validateUsername = (text) => ({\r\n    type: USER_NAME_ERROR,\r\n    payload: text\r\n})\r\n\r\nexport const validatePassword = (text) => ({\r\n    type: PASSWORD_ERROR,\r\n    payload: text\r\n})\r\n\r\nexport const validatePasswordConfirmation = (text) => ({\r\n    type: PASSWORD_CONFIRMATION_ERROR,\r\n    payload: text\r\n})","import React, { Component } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { \r\n  changeUsername, \r\n  changePassword, \r\n  changePasswordConfirmation,\r\n  changeSigninState,\r\n  validateUsername,\r\n  validatePassword,\r\n  validatePasswordConfirmation\r\n} from '../redux/actions'\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    username: state.userInfo.username,\r\n    password: state.userInfo.password,\r\n    passwordConfirmation: state.userInfo.passwordConfirmation,\r\n    isSignedin: state.userInfo.isSignedin,\r\n    usernameErr: state.errors.usernameErr,\r\n    passwordErr: state.errors.passwordErr,\r\n    passwordConfirmationErr: state.errors.passwordConfirmationErr\r\n  })\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return ({\r\n    onUsernameChange: (event) => dispatch(changeUsername(event.target.value)),\r\n    onPasswordChange: (event) => dispatch(changePassword(event.target.value)),\r\n    onPasswordConfirmationChange: (event) => dispatch(changePasswordConfirmation(event.target.value)),\r\n    onRegister: () => dispatch(changeSigninState()),\r\n    validateUsername: (text) => dispatch(validateUsername(text)),\r\n    validatePassword: (text) => dispatch(validatePassword(text)),\r\n    validatePasswordConfirmation: (text) => dispatch(validatePasswordConfirmation(text))\r\n  })\r\n}\r\n\r\n\r\nclass Register extends Component {\r\n\r\n  validate = () => {\r\n    const {username, password, passwordConfirmation, validateUsername, validatePassword, validatePasswordConfirmation  } = this.props\r\n    if(!username && !password && !passwordConfirmation) {\r\n      validateUsername('Username is required!')\r\n      validatePassword('password is required!')\r\n      validatePasswordConfirmation('password Confirmation is required!')\r\n    }\r\n    else if(!username){\r\n      validateUsername('Username is required!')\r\n      validatePassword('')\r\n      validatePasswordConfirmation('')\r\n    } \r\n    else if(!password){\r\n      validatePassword('password is required!')\r\n      validateUsername('')\r\n    } \r\n    else if(!passwordConfirmation){\r\n      validatePasswordConfirmation('password Confirmation is required!')\r\n      validatePassword('')\r\n    } \r\n    else if (password !== passwordConfirmation) {\r\n      validatePasswordConfirmation('password confirmation is not correct!')\r\n    }\r\n    else {\r\n      validatePassword('')\r\n      validateUsername('')\r\n      validatePasswordConfirmation('')\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onFormSubmit = (e) =>{\r\n    e.preventDefault();\r\n    const { username, password, onRegister, history, validateUsername } = this.props\r\n    if(this.validate()) {\r\n      axios.post('https://fathomless-taiga-86436.herokuapp.com/register', {\r\n        username: username,\r\n        password: password\r\n      })\r\n      .then(data => {\r\n        onRegister()\r\n        history.push('/chat')\r\n      })\r\n      .catch(err => {\r\n        if(err.response){\r\n          validateUsername(err.response.data)\r\n        } else {\r\n          validateUsername('Please try again later!')\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    const { usernameErr, onUsernameChange, passwordErr, onPasswordChange, passwordConfirmationErr, onPasswordConfirmationChange } = this.props\r\n    return (\r\n      <div className='container'>\r\n        <h1>Register</h1>\r\n        <form className='w-75' onSubmit={this.onFormSubmit}>\r\n          <small className='text-danger'>{usernameErr}</small>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Username</label>\r\n            <input \r\n              onChange={onUsernameChange}\r\n              type=\"text\" \r\n              className=\"form-control\" \r\n              aria-describedby=\"emailHelp\" \r\n            />\r\n          </div>\r\n          <small className='text-danger'>{passwordErr}</small>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n            <input \r\n              onChange={onPasswordChange}\r\n              name='password'\r\n              type=\"password\" \r\n              className=\"form-control\" \r\n            />\r\n          </div>\r\n          <small className='text-danger'>{passwordConfirmationErr}</small>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\r\n            <input \r\n              onChange={onPasswordConfirmationChange}\r\n              name='confirmPassword'\r\n              type=\"password\" \r\n              className=\"form-control\" \r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n          <div>\r\n            <Link to=\"/\">Already have an account? Sign In</Link>\r\n          </div> \r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(Register)) ","import React, { Component } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { \r\n  changeUsername,\r\n  changePassword, \r\n  changeSigninState, \r\n  validateUsername, \r\n  validatePassword \r\n} from '../redux/actions'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return({ \r\n    username: state.userInfo.username,\r\n    password: state.userInfo.password,\r\n    isSignedin: state.userInfo.isSignedin,\r\n    usernameErr: state.errors.usernameErr,\r\n    passwordErr: state.errors.passwordErr\r\n  })\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return({ \r\n    onUsernameChange: (event) => dispatch(changeUsername(event.target.value)),\r\n    onPasswordChange: (event) => dispatch(changePassword(event.target.value)),\r\n    onRegister: () => dispatch(changeSigninState()),\r\n    validateUsername: (text) => dispatch(validateUsername(text)),\r\n    validatePassword: (text) => dispatch(validatePassword(text))\r\n  })\r\n}\r\n\r\nclass Signin extends Component {\r\n  validate = () => {\r\n    const { username,password,validateUsername,validatePassword } = this.props\r\n    if(!username && !password) {\r\n      validateUsername('Username is required!')\r\n      validatePassword('password is required!')\r\n    }\r\n    else if(!username){\r\n      validateUsername('Username is required!')\r\n      validatePassword('')\r\n    } \r\n    else if(!password){\r\n      validatePassword('password is required!')\r\n      validateUsername('')\r\n    } \r\n    else {\r\n      validatePassword('')\r\n      validateUsername('')\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onFormSubmit = (e) =>{\r\n    e.preventDefault();\r\n    const {username,password,onRegister,history,validateUsername} = this.props\r\n    if(this.validate()) {\r\n      axios.post('https://fathomless-taiga-86436.herokuapp.com/signin', {\r\n        username: username,\r\n        password: password\r\n      })\r\n      .then(data => {\r\n        onRegister()\r\n        history.push('/chat')\r\n      })\r\n      .catch(err => {\r\n        if(err.response){\r\n          validateUsername(err.response.data)\r\n        } else {\r\n          validateUsername('Please try again later!')\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    const { usernameErr, onUsernameChange, passwordErr, onPasswordChange } = this.props\r\n    return (\r\n      <div className='container-sm'>\r\n        <h1>Sign In</h1>\r\n        <form className='' onSubmit={this.onFormSubmit}>\r\n          <small className='text-danger'>{usernameErr}</small>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Username</label>\r\n            <input \r\n              onChange={onUsernameChange}\r\n              name='username'\r\n              type=\"text\" \r\n              className=\"form-control\" \r\n              aria-describedby=\"emailHelp\" \r\n            />\r\n          </div>\r\n          <small className='text-danger'>{passwordErr}</small>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n            <input \r\n              onChange={onPasswordChange}\r\n              name='password'\r\n              type=\"password\" \r\n              className=\"form-control\" \r\n              id=\"exampleInputPassword1\" \r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Sign In</button>\r\n          <div>\r\n            <Link to=\"/register\">Don't have an account? Sign Up</Link>\r\n          </div> \r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Signin));","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { connect } from 'react-redux';\r\nimport { changeMessageInput } from '../../redux/actions';\r\nimport './Chat.css';\r\n\r\nconst scrollToBottom = () => {\r\n    document.getElementById('scroll').scrollIntoView({ behavior: \"smooth\" });\r\n}\r\n\r\n// Connecting Socket.io\r\nconst socket = socketIOClient('https://fathomless-taiga-86436.herokuapp.com/');\r\nsocket.on('chat',(data) => {\r\n    document.getElementById('typing').innerHTML = '';\r\n    document.getElementById('chatMessages').innerHTML += '<p><strong>' + data.name + ': </strong>' + data.message + '</p><br/>';\r\n    scrollToBottom();\r\n})\r\nsocket.on('typing',(data) => {\r\n    document.getElementById('typing').innerHTML = data + ' is typing ...'\r\n})\r\n\r\n// Handle redux\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messageField: state.messageInput.messageField,\r\n        username: state.userInfo.username,\r\n        isSignedin: state.userInfo.isSignedin\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onInputChange: (event) => dispatch(changeMessageInput(event.target.value))\r\n    }\r\n}\r\n\r\n\r\nclass Chat extends Component {\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.props.messageField.length)\r\n        {\r\n            socket.emit('chat',{\r\n                name: this.props.username,\r\n                message: this.props.messageField\r\n            })\r\n            document.getElementsByTagName('input')[0].value = '';\r\n            this.props.onInputChange({target: { value: '' }});\r\n            scrollToBottom();\r\n        }\r\n    }\r\n\r\n      \r\n    render(){\r\n        const { isSignedin, onInputChange, username} = this.props\r\n        return isSignedin\r\n        ?   <div className=\"card mx-auto my-5 bg-light chat-container\">\r\n                <header className='text-center border-bottom font-italic'>\r\n                    <h4 className=' my-3'>Global Chat</h4>\r\n                </header>\r\n                <div className=\"card-body overflow-auto\">\r\n                    <div id='chatMessages'></div>\r\n                    <div id='scroll'></div>\r\n                </div>\r\n                <p id='typing' className='ml-3'></p>\r\n                <form onSubmit={this.onFormSubmit} className=\"input-group p-1\">\r\n                    <input \r\n                        onChange={(event) =>{\r\n                            onInputChange(event)\r\n                            socket.emit('typing', username)\r\n                        }}\r\n                        type=\"text\" \r\n                        className=\"form-control rounded-pill\" \r\n                        placeholder=\"Type a message..\" \r\n                        aria-label=\"Type a message..\" \r\n                        aria-describedby=\"button-addon2\" \r\n                    />\r\n                    <div className=\"input-group-append btn m-0 p-0\">\r\n                        <svg onClick={this.onFormSubmit} height=\"36px\" width=\"36px\" viewBox=\"0 0 36 36\">\r\n                            <g fill=\"none\" fillRule=\"evenodd\"><g>\r\n                            <polygon points=\"0 36 36 36 36 0 0 0\"></polygon>\r\n                            <path d=\"M31.1059281,19.4468693 L10.3449666,29.8224462 C8.94594087,30.5217547 7.49043432,29.0215929 8.17420251,27.6529892 C8.17420251,27.6529892 10.7473302,22.456697 11.4550902,21.0955966 C12.1628503,19.7344961 12.9730756,19.4988922 20.4970248,18.5264632 C20.7754304,18.4904474 21.0033531,18.2803547 21.0033531,17.9997309 C21.0033531,17.7196073 20.7754304,17.5095146 20.4970248,17.4734988 C12.9730756,16.5010698 12.1628503,16.2654659 11.4550902,14.9043654 C10.7473302,13.5437652 8.17420251,8.34697281 8.17420251,8.34697281 C7.49043432,6.9788693 8.94594087,5.47820732 10.3449666,6.1775158 L31.1059281,16.553593 C32.298024,17.1488555 32.298024,18.8511065 31.1059281,19.4468693\" fill=\"#0099ff\"></path></g></g>\r\n                        </svg>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        :   <div className='text-center mt-5'>\r\n                <h1>\r\n                    <Link to=\"/\">Please register first</Link>\r\n                </h1>\r\n            </div> \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Chat);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport Register from './components/Register';\nimport Signin from './components/Signin';\nimport Chat from './components/chat/Chat';\n\nclass App extends Component {\n  render(){\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/chat\">\n              <Chat />\n            </Route>\n            <Route path=\"/\">\n              <Signin />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}